{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport e from 'express';\nimport { useState, useEffect } from 'react';\nimport { useAuthContext } from './useAuthContext';\n\nconst useSignup = () => {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = userAuthContext();\n\n  const signup = async (email, password) => {\n    setIsLoading(true);\n    setError(null); //fetch signup api\n\n    const response = await fetch('/api/user/signup', {\n      method: \"POST\",\n      header: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }); //get response api\n\n    const json = await response.json();\n\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    } else {\n      //save the user to local storage\n      localStorage.setItem('user', JSON.stringify(json)); //update auth context\n\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n      setIsLoading(false);\n    }\n  };\n\n  return signup, isLoading, error;\n};\n\n_s(useSignup, \"oSmfmuW5T4Yczc8SMzWJFCrcXbA=\");\n\nexport { useSignup };","map":{"version":3,"names":["e","useState","useEffect","useAuthContext","useSignup","error","setError","isLoading","setIsLoading","dispatch","userAuthContext","signup","email","password","response","fetch","method","header","body","JSON","stringify","json","ok","localStorage","setItem","type","payload"],"sources":["/Users/giangnguyen/MERN/Workout_App/frontend/src/hooks/useSignup.js"],"sourcesContent":["import e from 'express';\nimport {useState, useEffect} from'react'\nimport {useAuthContext} from  './useAuthContext'\n\nconst useSignup = () =>{\n    const [error, setError] = useState(null);\n    const [isLoading, setIsLoading] =useState(null);\n    const {dispatch} = userAuthContext();\n    \n    const signup = async (email, password)=>{\n        setIsLoading(true);\n        setError(null)\n\n        //fetch signup api\n        const response = await fetch('/api/user/signup', {\n            method: \"POST\",\n            header: {'Content-Type' : 'application/json'},\n            body: JSON.stringify({email,password})\n        })\n        //get response api\n        const json = await response.json();\n\n        if(!response.ok){\n            setIsLoading(false);\n            setError(json.error);\n\n        }else{\n            //save the user to local storage\n            localStorage.setItem('user', JSON.stringify(json));\n\n            //update auth context\n            dispatch({type: 'LOGIN', payload:json})\n            setIsLoading(false);\n        }\n        \n\n    }\n\n    return (signup, isLoading, error);\n\n}\n\nexport {useSignup}"],"mappings":";;AAAA,OAAOA,CAAP,MAAc,SAAd;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAiC,OAAjC;AACA,SAAQC,cAAR,QAA8B,kBAA9B;;AAEA,MAAMC,SAAS,GAAG,MAAK;EAAA;;EACnB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;EACA,MAAM,CAACM,SAAD,EAAYC,YAAZ,IAA2BP,QAAQ,CAAC,IAAD,CAAzC;EACA,MAAM;IAACQ;EAAD,IAAaC,eAAe,EAAlC;;EAEA,MAAMC,MAAM,GAAG,OAAOC,KAAP,EAAcC,QAAd,KAAyB;IACpCL,YAAY,CAAC,IAAD,CAAZ;IACAF,QAAQ,CAAC,IAAD,CAAR,CAFoC,CAIpC;;IACA,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAD,EAAqB;MAC7CC,MAAM,EAAE,MADqC;MAE7CC,MAAM,EAAE;QAAC,gBAAiB;MAAlB,CAFqC;MAG7CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QAACR,KAAD;QAAOC;MAAP,CAAf;IAHuC,CAArB,CAA5B,CALoC,CAUpC;;IACA,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAT,EAAnB;;IAEA,IAAG,CAACP,QAAQ,CAACQ,EAAb,EAAgB;MACZd,YAAY,CAAC,KAAD,CAAZ;MACAF,QAAQ,CAACe,IAAI,CAAChB,KAAN,CAAR;IAEH,CAJD,MAIK;MACD;MACAkB,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BL,IAAI,CAACC,SAAL,CAAeC,IAAf,CAA7B,EAFC,CAID;;MACAZ,QAAQ,CAAC;QAACgB,IAAI,EAAE,OAAP;QAAgBC,OAAO,EAACL;MAAxB,CAAD,CAAR;MACAb,YAAY,CAAC,KAAD,CAAZ;IACH;EAGJ,CA3BD;;EA6BA,OAAQG,MAAM,EAAEJ,SAAF,EAAaF,KAA3B;AAEH,CApCD;;GAAMD,S;;AAsCN,SAAQA,SAAR"},"metadata":{},"sourceType":"module"}